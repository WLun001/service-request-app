@startuml
title Design Class Diagram
dbHelper::Person <|-- dbHelper::Client
dbHelper::Person <|-- dbHelper::Technician

dbHelper::PersonList <|-- dbHelper::ClientList
dbHelper::PersonList <|-- dbHelper::TechnicianList

domain::ServiceRequest --> "1" dbHelper::Technician
domain::ServiceRequest -left-> "1" dbHelper::Client

domain::ServiceRequestList ..> domain::IServiceRequestList : <<implement>>

domain::Controller --> "1" domain::ServiceRequest
domain::Controller --> "1" domain::IServiceRequestList

ui::AppUI .right.> ui::IUserInterface : <<implement>>
ui::ServiceRequestApp --> "1" ui::IUserInterface
ui::ServiceRequestApp .up.> "1" dbHelper::TechnicianList
ui::ServiceRequestApp .up.> "1" dbHelper::ClientList
ui::ServiceRequestApp ..> "1" ui::AppUI

abstract class dbHelper::Person{
 -id: String
 -name: String
 -address: String
 -contactNo: String
 {method}<<create>>
 +Person(name:String)
 +getId():String
 +getName():String
}

class dbHelper::Client{
 -address: String
 -contactNo: String
 {method}<<create>>
 +Client(name:String, address:String, contactNo:String)
 +getAddress():String
 +getContactNo():String
}

class dbHelper::Technician{
 {method}<<create>>
 +Technician(name:String)
}

abstract class dbHelper::PersonList{
 #persons:List<Person>
 {method}<<create>>
 +PersonList()
 +search(id:String):Person
 +getPersonList():List<Person>
 #{abstract}init()
}

class dbHelper::ClientList{
 {method}<<create>>
 +ClientList()
}

class dbHelper::TechnicianList{
 {method}<<create>>
 +TechnicianList()
}

class domain::ServiceRequest{
 -id:String
 -date:String
 -client:Client
 -technician:Technician
 -serviceCharge:double
 {method}<<create>>
 +ServiceRequest(client:Client, date:String
 +getId():String
 +getDate():String
 +getClient():Client
 +getTechnician():Technician
 +setTechnician(technician:Technician)
 +setServiceCharge(serviceCharge:double)
}

interface domain::IServiceRequestList{
+addServiceRequest(client:Client, date:String)
+searchServiceRequest(requestId:String):ServiceRequest
+getServiceRequestCount():int
+getServiceRequestList():List<ServiceRequest>
}


class domain::ServiceRequestList{
 -serviceRequests:List<ServiceRequest>
 {method}<<create>>
 +ServiceRequestList()
 +addServiceRequest(client:Client, date:String)
 +searchServiceRequest(requestId:String):ServiceRequest
 +getServiceRequestCount():int
 +getServiceRequestList():List<ServiceRequest>
}

class domain::Controller{
 -requestList:IServiceRequestList
 -serviceRequest:ServiceRequest
 {method}<<create>>
 +Controller()
 +getSelectedServiceRequest():ServiceRequest
 +addServiceRequest(client:Client, date:String)
 +searchServiceRequest(requestId:String):ServiceRequest
 +getNumberOfServiceRequest():int
 +getServiceRequestList():List<ServiceRequest>
 +assignTechnician(technician:Technician)
 +addServiceCharge(serviceCharge:double)
}

interface ui::IUserInterface{
 +setController(controller:Controller)
 +start()
}

class ui::AppUI{
 -controller:Controller
 -scanner:Scanner
 -persons:PersonList
 {method}<<create>>
 +AppUI()
 +setController(controller:Controller)
 +start()
 -displayMainMenu()
 -displayServiceRequests()
 -displayPerson(pList:PersonList, message:String)
 -createNewServiceRequest()
 -displayServiceRequest(request:ServiceRequest)
 -selectServiceRequest()
 -displayTechnicians()
 -assignTechnician()
 -addServiceCharge()
}

class ui::ServiceRequestApp{
 {static} main(args:String[])
}
@enduml